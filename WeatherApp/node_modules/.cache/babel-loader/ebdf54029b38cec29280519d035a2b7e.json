{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arned\\\\Documents\\\\WebDevSep\\\\REACTJS\\\\EXCERCISES\\\\weatherapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport fetch from 'node-fetch';\nimport { Button, Input, Label, Container, Row, Col, Media } from 'reactstrap';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      \"coord\": {\n        \"lon\": -0.1257,\n        \"lat\": 51.5085\n      },\n      \"weather\": [{\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n      }],\n      \"base\": \"stations\",\n      \"main\": {\n        \"temp\": 277.4,\n        \"feels_like\": 273.25,\n        \"temp_min\": 277.04,\n        \"temp_max\": 277.59,\n        \"pressure\": 998,\n        \"humidity\": 87\n      },\n      \"visibility\": 7000,\n      \"wind\": {\n        \"speed\": 3.6,\n        \"deg\": 300\n      },\n      \"clouds\": {\n        \"all\": 90\n      },\n      \"dt\": 1612183991,\n      \"sys\": {\n        \"type\": 1,\n        \"id\": 1414,\n        \"country\": \"GB\",\n        \"sunrise\": 1612165123,\n        \"sunset\": 1612198163\n      },\n      \"timezone\": 0,\n      \"id\": 2643743,\n      \"name\": \"London\",\n      \"cod\": 200\n    };\n\n    this.getWeather = cityname => {\n      return new Promise((resolve, reject) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=886705b4c1182eb1c69f28eb8c520e20`).then(data => data.json()).then(res => this.setState(res));\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    let imgSource = `http://openweathermap.org/img/wn/${this.state.weather[0].icon}@2x.png`;\n    console.log(imgSource);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"cityname\",\n              children: \"City Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"cityname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.getWeather(document.getElementById('cityname').value),\n              children: \"Get Current Weather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Current Weather Situation in \", this.state.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Temprature: \", this.state.main.temp, \" F \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Weather Condition: \", this.state.weather[0].main, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Wind Speed: \", this.state.wind.speed, \" MPH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Media, {\n              object: true,\n              \"data-src\": this.imgSource,\n              alt: \"Generic placeholder image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arned/Documents/WebDevSep/REACTJS/EXCERCISES/weatherapp/src/App.js"],"names":["React","Component","fetch","Button","Input","Label","Container","Row","Col","Media","App","state","getWeather","cityname","Promise","resolve","reject","then","data","json","res","setState","render","console","log","imgSource","weather","icon","document","getElementById","value","name","main","temp","wind","speed"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport fetch from 'node-fetch'\nimport { Button, Input, Label, Container, Row, Col, Media } from 'reactstrap'\n\n\n\nexport default class App extends Component {\n  state = {\"coord\":{\"lon\":-0.1257,\"lat\":51.5085},\"weather\":[{\"id\":804,\"main\":\"Clouds\",\"description\":\"overcast clouds\",\"icon\":\"04d\"}],\"base\":\"stations\",\"main\":{\"temp\":277.4,\"feels_like\":273.25,\"temp_min\":277.04,\"temp_max\":277.59,\"pressure\":998,\"humidity\":87},\"visibility\":7000,\"wind\":{\"speed\":3.6,\"deg\":300},\"clouds\":{\"all\":90},\"dt\":1612183991,\"sys\":{\"type\":1,\"id\":1414,\"country\":\"GB\",\"sunrise\":1612165123,\"sunset\":1612198163},\"timezone\":0,\"id\":2643743,\"name\":\"London\",\"cod\":200}\n  \n  getWeather = (cityname) => {\n    return new Promise((resolve, reject) => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=886705b4c1182eb1c69f28eb8c520e20`)\n        .then(data => data.json())\n        .then(res => this.setState(res));\n\n    })\n\n\n  }\n\n  render() {\n\n\n    console.log(this.state)\n    let imgSource = `http://openweathermap.org/img/wn/${this.state.weather[0].icon}@2x.png`;\n    console.log(imgSource)\n    return (\n\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <Label for=\"cityname\">City Name</Label>\n              <Input type=\"text\" id=\"cityname\"></Input>\n              <Button onClick={() => this.getWeather(document.getElementById('cityname').value)}>Get Current Weather</Button></Col>\n            <Col>\n              <h1>Current Weather Situation in {this.state.name}</h1>\n              <h3>Temprature: {this.state.main.temp} F </h3>\n              <h3>Weather Condition: {this.state.weather[0].main} </h3>\n              <h3>Wind Speed: {this.state.wind.speed} MPH</h3>\n              <Media object data-src={this.imgSource} alt=\"Generic placeholder image\" />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}