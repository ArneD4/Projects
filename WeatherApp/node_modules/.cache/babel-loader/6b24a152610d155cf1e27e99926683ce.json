{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arned\\\\Documents\\\\WebDevSep\\\\REACTJS\\\\EXCERCISES\\\\weatherapp\\\\src\\\\App.js\";\nimport './index.css';\nimport React, { Component } from 'react';\nimport fetch from 'node-fetch';\nimport { Button, Input, Label, Container, Row, Col, Media } from 'reactstrap';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      \"coord\": {\n        \"lon\": -0.1257,\n        \"lat\": 51.5085\n      },\n      \"weather\": [{\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n      }],\n      \"base\": \"stations\",\n      \"main\": {\n        \"temp\": 277.4,\n        \"feels_like\": 273.25,\n        \"temp_min\": 277.04,\n        \"temp_max\": 277.59,\n        \"pressure\": 998,\n        \"humidity\": 87\n      },\n      \"visibility\": 7000,\n      \"wind\": {\n        \"speed\": 3.6,\n        \"deg\": 300\n      },\n      \"clouds\": {\n        \"all\": 90\n      },\n      \"dt\": 1612183991,\n      \"sys\": {\n        \"type\": 1,\n        \"id\": 1414,\n        \"country\": \"GB\",\n        \"sunrise\": 1612165123,\n        \"sunset\": 1612198163\n      },\n      \"timezone\": 0,\n      \"id\": 2643743,\n      \"name\": \"London\",\n      \"cod\": 200\n    };\n\n    this.getWeather = cityname => {\n      return new Promise((resolve, reject) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=886705b4c1182eb1c69f28eb8c520e20`).then(data => data.json()).then(res => this.setState(res));\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    let imgSource = `http://openweathermap.org/img/wn/${this.state.weather[0].icon}@2x.png`;\n    console.log(imgSource);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"Container\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: \"6\",\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [this.state.weather[0].main, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.state.name, \", \", this.state.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"img\",\n            src: imgSource\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"6\",\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [Math.round(this.state.main.temp - 273.15), \" \\xB0C \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Wind Speed: \", this.state.wind.speed, \" MPH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Humidity: \", this.state.main.humidity, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            id: \"search\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"cityname\",\n                children: \"City Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"cityname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => this.getWeather(document.getElementById('cityname').value),\n                children: \"Get Current Weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arned/Documents/WebDevSep/REACTJS/EXCERCISES/weatherapp/src/App.js"],"names":["React","Component","fetch","Button","Input","Label","Container","Row","Col","Media","App","state","getWeather","cityname","Promise","resolve","reject","then","data","json","res","setState","render","console","log","imgSource","weather","icon","main","name","sys","country","Math","round","temp","wind","speed","humidity","document","getElementById","value"],"mappings":"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","sourcesContent":["import './index.css';\nimport React, { Component } from 'react'\nimport fetch from 'node-fetch'\nimport { Button, Input, Label, Container, Row, Col, Media } from 'reactstrap'\n\n\n\nexport default class App extends Component {\n  state = { \"coord\": { \"lon\": -0.1257, \"lat\": 51.5085 }, \"weather\": [{ \"id\": 804, \"main\": \"Clouds\", \"description\": \"overcast clouds\", \"icon\": \"04d\" }], \"base\": \"stations\", \"main\": { \"temp\": 277.4, \"feels_like\": 273.25, \"temp_min\": 277.04, \"temp_max\": 277.59, \"pressure\": 998, \"humidity\": 87 }, \"visibility\": 7000, \"wind\": { \"speed\": 3.6, \"deg\": 300 }, \"clouds\": { \"all\": 90 }, \"dt\": 1612183991, \"sys\": { \"type\": 1, \"id\": 1414, \"country\": \"GB\", \"sunrise\": 1612165123, \"sunset\": 1612198163 }, \"timezone\": 0, \"id\": 2643743, \"name\": \"London\", \"cod\": 200 }\n\n  getWeather = (cityname) => {\n    return new Promise((resolve, reject) => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=886705b4c1182eb1c69f28eb8c520e20`)\n        .then(data => data.json())\n        .then(res => this.setState(res));\n\n    })\n\n\n  }\n\n  render() {\n\n   \n\n\n    console.log(this.state)\n    let imgSource = `http://openweathermap.org/img/wn/${this.state.weather[0].icon}@2x.png`;\n    console.log(imgSource)\n\n    return (\n\n      <div>\n\n\n        <Container className=\"Container\">\n        <Row>\n          <Col xs=\"6\" className=\"title\">\n            <h3>{this.state.weather[0].main} </h3>\n            <h1>{this.state.name}, {this.state.sys.country}</h1>\n          </Col>\n          <img id=\"img\" src={imgSource}></img>\n            <Col xs=\"6\" className=\"info\">\n              <h2>{Math.round((this.state.main.temp) - 273.15)} °C </h2>\n              <p>Wind Speed: {this.state.wind.speed} MPH</p>\n              <p>Humidity: {this.state.main.humidity} %</p>\n            </Col>\n\n            <Col id=\"search\">\n              <div className=\"search\">\n                <Label for=\"cityname\">City Name: </Label>\n                <Input type=\"text\" id=\"cityname\"></Input>\n                <Button onClick={() => this.getWeather(document.getElementById('cityname').value)}>Get Current Weather</Button>\n              </div>\n            </Col>\n          </Row>\n\n        </Container>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}