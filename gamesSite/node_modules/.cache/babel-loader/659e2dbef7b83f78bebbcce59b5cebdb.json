{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arned\\\\Documents\\\\ArneDefoorPortfolio\\\\login\\\\src\\\\components\\\\SnakeGame.js\";\nimport React, { Component } from 'react';\nimport Food from './Food';\nimport Snake from './Snake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nclass SnakeGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: getRandomCoordinates(),\n      direction: 'RIGHT',\n      snakeDots: [[0, 0], [2, 0]]\n    };\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.State.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.State.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'UP':\n          head = [head[0] + 2, head[1]];\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snakegame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"snake game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        children: [/*#__PURE__*/_jsxDEV(Snake, {\n          snakeDots: this.state.snakeDots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Food, {\n          dot: this.state.food\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SnakeGame;","map":{"version":3,"sources":["C:/Users/arned/Documents/ArneDefoorPortfolio/login/src/components/SnakeGame.js"],"names":["React","Component","Food","Snake","getRandomCoordinates","min","max","x","Math","floor","random","y","SnakeGame","state","food","direction","snakeDots","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","State","head","length","componentDidMount","document","onkeydown","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Food from './Food'\r\nimport Snake from './Snake'\r\n\r\nconst getRandomCoordinates = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\r\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\r\n    return [x,y]\r\n}\r\n\r\nclass SnakeGame extends Component {\r\n    state = {\r\n        food: getRandomCoordinates(),\r\n        direction: 'RIGHT',\r\n        snakeDots: [\r\n            [0, 0],\r\n            [2, 0]\r\n        ]\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.onkeydown = this.onKeyDown;\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        e = e || window.event;\r\n        switch (e.keyCode){\r\n            case 38:\r\n                this.setState({direction: 'UP'});\r\n            case 40:\r\n                this.setState({direction: 'DOWN'});\r\n            case 37:\r\n                this.setState({direction: 'LEFT'});\r\n            case 39:\r\n                this.setState({direction: 'RIGHT'});\r\n        }\r\n    }\r\n\r\n    moveSnake = () =>{\r\n        let dots = [...this.State.snakeDots];\r\n        let head = dots[dots.length - 1]\r\nswitch (this.State.direction) {\r\n    case 'RIGHT':\r\n        head = [head[0] + 2, head [1]];\r\n        break;\r\n    case 'LEFT':\r\n        head = [head[0] - 2, head [1]];\r\n        break;\r\n    case 'DOWN':\r\n        head = [head[0] + 2, head [1]];\r\n        break;\r\n    case 'UP':\r\n        head = [head[0] + 2, head [1]];\r\n        break;\r\n}\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"snakegame\">\r\n                <h1>snake game</h1>\r\n                <div className=\"game-area\">\r\n                    <Snake snakeDots={this.state.snakeDots} />\r\n                    <Food dot={this.state.food} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SnakeGame\r\n"]},"metadata":{},"sourceType":"module"}