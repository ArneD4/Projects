{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arned\\\\Documents\\\\ArneDefoorPortfolio\\\\login\\\\src\\\\components\\\\SnakeGame.js\";\nimport React, { Component, useState } from 'react';\nimport Modal, { setAppElement } from 'react-modal';\nimport { Container } from 'reactstrap';\nimport Food from './Food';\nimport Snake from './Snake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar audio1 = new Audio('http://www.superluigibros.com/downloads/sounds/SNES/SMK/wav/jump.wav');\nvar audio2 = new Audio('http://web.mit.edu/GRAPHICS/src/tuxpaint-0.9.12/data/sounds/bleep.wav');\nvar audio3 = new Audio('http://www.mario-museum.net/sons/smb_gameover.wav');\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 200,\n  direction: 'RIGHT',\n  snakeDots: [[50, 50], [52, 50]],\n  modalOpen: false\n};\n\nclass SnakeGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.startGame = () => {\n      audio2.play();\n      setInterval(this.moveSnake, 200);\n      document.onkeydown = this.onKeyDown;\n    };\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\n            this.setState({\n              direction: \"UP\"\n            });\n          }\n\n          e.preventDefault();\n          break;\n\n        case 40:\n          if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\n            this.setState({\n              direction: \"DOWN\"\n            });\n          }\n\n          e.preventDefault();\n          break;\n\n        case 37:\n          if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\n            this.setState({\n              direction: \"LEFT\"\n            });\n          }\n\n          break;\n\n        case 39:\n          if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\n            this.setState({\n              direction: \"RIGHT\"\n            });\n          }\n\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.onGameOver();\n      }\n    });\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      });\n      audio1.play();\n      this.enlargeSnake();\n      this.increaseSpeed();\n      setInterval(this.moveSnake, this.state.speed);\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n\n  onGameOver() {\n    clearInterval(this.checkIfEat);\n    audio3.play();\n    this.setState({\n      food: getRandomCoordinates(),\n      speed: 200,\n      direction: 'RIGHT',\n      snakeDots: [[50, 50], [52, 50]],\n      modalOpen: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snakegame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"snake game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startGame,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        children: [/*#__PURE__*/_jsxDEV(Snake, {\n          snakeDots: this.state.snakeDots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Food, {\n          dot: this.state.food\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        id: \"mod2\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          className: \"Modal\",\n          ariaHideApp: false,\n          isOpen: this.state.modalOpen,\n          onRequestClose: () => {\n            setModalIsOpen(false);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Game Over!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Your Score: \", this.state.snakeDots.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SnakeGame;","map":{"version":3,"sources":["C:/Users/arned/Documents/ArneDefoorPortfolio/login/src/components/SnakeGame.js"],"names":["React","Component","useState","Modal","setAppElement","Container","Food","Snake","audio1","Audio","audio2","audio3","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","modalOpen","SnakeGame","state","startGame","play","setInterval","moveSnake","document","onkeydown","onKeyDown","e","window","event","keyCode","includes","setState","preventDefault","dots","head","length","push","shift","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","pop","forEach","dot","enlargeSnake","increaseSpeed","newSnake","unshift","clearInterval","render","setModalIsOpen"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport Modal, { setAppElement } from 'react-modal'\r\nimport { Container } from 'reactstrap';\r\nimport Food from './Food'\r\nimport Snake from './Snake'\r\n\r\nvar audio1 = new Audio('http://www.superluigibros.com/downloads/sounds/SNES/SMK/wav/jump.wav');\r\nvar audio2 = new Audio('http://web.mit.edu/GRAPHICS/src/tuxpaint-0.9.12/data/sounds/bleep.wav');\r\nvar audio3 = new Audio('http://www.mario-museum.net/sons/smb_gameover.wav');\r\n\r\nconst getRandomCoordinates = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    return [x, y]\r\n}\r\n\r\nconst initialState = {\r\n        food: getRandomCoordinates(),\r\n        speed: 200,\r\n        direction: 'RIGHT',\r\n        snakeDots: [\r\n            [50, 50],\r\n            [52, 50]\r\n        ],\r\n        modalOpen: false\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SnakeGame extends Component {\r\n    state = initialState;\r\n\r\n\r\n    startGame = () => {\r\n        audio2.play()\r\n        setInterval(this.moveSnake, 200)\r\n        document.onkeydown = this.onKeyDown;  \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.checkIfOutOfBorders();\r\n        this.checkIfCollapsed();\r\n        this.checkIfEat();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    onKeyDown = (e) => {\r\n        e = e || window.event;\r\n        switch (e.keyCode) {\r\n          case 38:\r\n            if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\r\n              this.setState({ direction: \"UP\" });\r\n            }\r\n            e.preventDefault();\r\n            break;\r\n          case 40:\r\n            if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\r\n              this.setState({ direction: \"DOWN\" });\r\n            }\r\n            e.preventDefault();\r\n            break;\r\n          case 37:\r\n            if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\r\n              this.setState({ direction: \"LEFT\" });\r\n            }\r\n            break;\r\n          case 39:\r\n            if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\r\n              this.setState({ direction: \"RIGHT\" });\r\n            }\r\n            break;\r\n        }\r\n      };\r\n\r\n\r\n  \r\n    moveSnake = () => {\r\n        let dots = [...this.state.snakeDots];\r\n        let head = dots[dots.length - 1]\r\n        switch (this.state.direction) {\r\n            case 'RIGHT':\r\n                head = [head[0] + 2, head[1]];\r\n                break;\r\n            case 'LEFT':\r\n                head = [head[0] - 2, head[1]];\r\n                break;\r\n            case 'DOWN':\r\n                head = [head[0], head[1] + 2];\r\n                break;\r\n            case 'UP':\r\n                head = [head[0], head[1] - 2];\r\n                break;\r\n        }\r\n        dots.push(head);\r\n        dots.shift();\r\n        this.setState({\r\n            snakeDots: dots\r\n        })\r\n    }\r\n\r\n\r\n    checkIfOutOfBorders() {\r\n        let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0){\r\n            this.onGameOver();\r\n        }\r\n    }\r\n\r\n    checkIfCollapsed(){\r\n        let snake = [...this.state.snakeDots];\r\n        let head = snake[snake.length -1];\r\n        snake.pop();\r\n        snake.forEach(dot => {\r\n            if (head[0] == dot[0] && head[1] == dot[1]){\r\n                this.onGameOver();\r\n            }\r\n        })\r\n    }\r\n\r\n    checkIfEat() {\r\n        let head = this.state.snakeDots[this.state.snakeDots.length -1];\r\n        let food = this.state.food;\r\n        if (head[0] == food[0] && head[1] == food[1]){\r\n            this.setState({\r\n                food: getRandomCoordinates()\r\n            })\r\n            audio1.play()\r\n           this.enlargeSnake();\r\n           this.increaseSpeed();\r\n           setInterval(this.moveSnake, this.state.speed)\r\n        }\r\n    }\r\n\r\n    enlargeSnake() {\r\n        let newSnake = [...this.state.snakeDots];    \r\n        newSnake.unshift([])\r\n        this.setState({\r\n            snakeDots: newSnake,\r\n\r\n        })\r\n    }\r\n\r\n    increaseSpeed() {\r\n        if(this.state.speed > 10) {\r\n            this.setState({\r\n                speed: this.state.speed -10\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    onGameOver(){\r\n        clearInterval(this.checkIfEat)\r\n        audio3.play()\r\n        this.setState({\r\n            food: getRandomCoordinates(),\r\n            speed: 200,\r\n            direction: 'RIGHT',\r\n            snakeDots: [\r\n                [50, 50],\r\n                [52, 50]\r\n            ],\r\n            modalOpen: true\r\n    }\r\n    );\r\n     \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"snakegame\">\r\n                <h1>snake game</h1>\r\n                <button onClick={this.startGame}>Start</button>\r\n                <div className=\"game-area\">\r\n                    <Snake snakeDots={this.state.snakeDots} />\r\n                    <Food dot={this.state.food} />\r\n                </div>\r\n                <Container id=\"mod2\">\r\n                <Modal className=\"Modal\" ariaHideApp={false} isOpen={this.state.modalOpen} onRequestClose={() => { setModalIsOpen(false);}}>\r\n                    <h1>Game Over!</h1>\r\n                    <h2>Your Score: {this.state.snakeDots.length}</h2>\r\n                </Modal>\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SnakeGame\r\n"]},"metadata":{},"sourceType":"module"}