{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arned\\\\Documents\\\\ArneDefoorPortfolio\\\\login\\\\src\\\\components\\\\SnakeGame.js\";\nimport React, { Component } from 'react';\nimport Food from './Food';\nimport Snake from './Snake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nclass SnakeGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: getRandomCoordinates(),\n      speed: 200,\n      direction: 'RIGHT',\n      snakeDots: [[0, 0], [2, 0]]\n    };\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfOutOfBorders();\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  onGameOver() {\n    alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    this.setState({\n      food: getRandomCoordinates(),\n      speed: 200,\n      direction: 'RIGHT',\n      snakeDots: [[0, 0], [2, 0]]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"snakegame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"snake game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-area\",\n        children: [/*#__PURE__*/_jsxDEV(Snake, {\n          snakeDots: this.state.snakeDots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Food, {\n          dot: this.state.food\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SnakeGame;","map":{"version":3,"sources":["C:/Users/arned/Documents/ArneDefoorPortfolio/login/src/components/SnakeGame.js"],"names":["React","Component","Food","Snake","getRandomCoordinates","min","max","x","Math","floor","random","y","SnakeGame","state","food","speed","direction","snakeDots","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","onGameOver","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Food from './Food'\r\nimport Snake from './Snake'\r\n\r\nconst getRandomCoordinates = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n    return [x, y]\r\n}\r\n\r\n\r\n\r\nclass SnakeGame extends Component {\r\n    state = {\r\n        food: getRandomCoordinates(),\r\n        speed: 200,\r\n        direction: 'RIGHT',\r\n        snakeDots: [\r\n            [0, 0],\r\n            [2, 0]\r\n        ]\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        setInterval(this.moveSnake, this.state.speed)\r\n        document.onkeydown = this.onKeyDown;\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.checkIfOutOfBorders()\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        e = e || window.event;\r\n        switch (e.keyCode) {\r\n            case 38:\r\n                this.setState({ direction: 'UP' });\r\n                break;\r\n            case 40:\r\n                this.setState({ direction: 'DOWN' });\r\n                break;\r\n            case 37:\r\n                this.setState({ direction: 'LEFT' });\r\n                break;\r\n            case 39:\r\n                this.setState({ direction: 'RIGHT' });\r\n                break;\r\n        }\r\n    }\r\n\r\n    moveSnake = () => {\r\n        let dots = [...this.state.snakeDots];\r\n        let head = dots[dots.length - 1]\r\n        switch (this.state.direction) {\r\n            case 'RIGHT':\r\n                head = [head[0] + 2, head[1]];\r\n                break;\r\n            case 'LEFT':\r\n                head = [head[0] - 2, head[1]];\r\n                break;\r\n            case 'DOWN':\r\n                head = [head[0], head[1] + 2];\r\n                break;\r\n            case 'UP':\r\n                head = [head[0], head[1] - 2];\r\n                break;\r\n        }\r\n        dots.push(head);\r\n        dots.shift();\r\n        this.setState({\r\n            snakeDots: dots\r\n        })\r\n\r\n    }\r\n\r\n\r\n    checkIfOutOfBorders() {\r\n        let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0){\r\n            this.onGameOver();\r\n        }\r\n    }\r\n\r\n    onGameOver(){\r\n        alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\r\n        this.setState({\r\n            food: getRandomCoordinates(),\r\n            speed: 200,\r\n            direction: 'RIGHT',\r\n            snakeDots: [\r\n                [0, 0],\r\n                [2, 0]\r\n            ]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"snakegame\">\r\n                <h1>snake game</h1>\r\n                <div className=\"game-area\">\r\n                    <Snake snakeDots={this.state.snakeDots} />\r\n                    <Food dot={this.state.food} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SnakeGame\r\n"]},"metadata":{},"sourceType":"module"}